name: Verifier_Train
display_name: Verifier Train
version: 0.0.1
type: command
description: Verifier Train
tags: {category: Verifier Training, contact: v-yifeili@microsoft.com}
inputs:
  training_data_dir:
    type: path
    description: Training data organized in {train.txt, dev.txt, [test.txt] and label.txt}
  training_data_labels_dir:
    type: path
    description: The directory of labels.txt
  model_name_or_path:
    type: path
    description: model_name_or_path
    default: microsoft/deberta-v3-large
  output_dir:
    type: path
    description: output_dir
  save_strategy:
    type: string
    desacription: save_strategy
    default: epoch
  evaluation_strategy:
    type: string
    desacription: evaluation_strategy
    default: epoch
  learning_rate:
    type: number
    description: Learning rate, default is 1e-5
    default: 1e-5
  seed:
    type: integer
    description: Random seed, default is 1
    default: 1
  do_train:
    type: boolean
    description: True or False
    default: True
  do_eval:
    type: boolean
    description: True or False
    default: True
  solution_correct_loss_weight:
    type: number
    description: default 1.0
    default: 1.0
  solution_incorrect_loss_weight:
    type: number
    description: default 1.0
    default: 1.0
  step_correct_loss_weight:
    type: number
    description: default 0.1
    default: 0.1
  step_incorrect_loss_weight:
    type: number
    description: default 0.1
    default: 0.1
  num_of_multi_task_solution_wise_and_stepwise_both_train_epochs:
    type: integer
    description: default is 2
    default: 2
  num_of_solution_wise_only_train_epochs:
    type: integer
    description: default is 2
    default: 2
outputs:
  model_output_dir:
    type: path
code:
  local_path: ./train_src
environment: azureml:AzureML-Minimal:1
  # image: pytorch/pytorch:1.6.0-cuda10.1-cudnn7-devel
  # registry: docker.io
  # setup:
  #   - sudo apt-get install -y git
  #   - pip install wandb==0.12.7
  #   - pip install future
  #   - pip install numpy==1.20.3
  #   - pip install transformers==4.6.0
  #   - pip install datasets==1.11.0
  #   - pip install huggingface-hub==0.0.8
  #   - pip install nltk
  #   - pip install rouge-score
  #   - pip install sacrebleu==1.5.1
  #   - pip install sentencepiece
  #   - pip install sklearn
  #   - pip install deepspeed
  #   - pip install seqeval
  #   - pip install conllu
command: >-
  python -m torch.distributed.launch run_ner.py
  --master_port 29501
  --nproc_per_node 8
  --task_type NER
  --data_dir ${{inputs.training_data_dir}}
  --labels ${{inputs.training_data_labels_dir}}
  --model_name_or_path ${{inputs.model_name_or_path}}
  --output_dir ${{outputs.model_output_dir}}
  --max_seq_length 512
  --per_device_train_batch_size 8
  --per_device_eval_batch_size 64
  --save_strategy ${{inputs.save_strategy}}
  --evaluation_strategy ${{inputs.evaluation_strategy}}
  --learning_rate ${{inputs.learning_rate}}
  --seed ${{inputs.seed}}
  --do_train ${{inputs.do_train}}
  --do_eval ${{inputs.do_eval}}
  --logging_steps 10
  --overwrite_output_dir
  --solution_correct_loss_weight ${{inputs.solution_correct_loss_weight}}
  --solution_incorrect_loss_weight ${{inputs.solution_incorrect_loss_weight}}
  --step_correct_loss_weight ${{inputs.step_correct_loss_weight}}
  --step_incorrect_loss_weight ${{inputs.step_incorrect_loss_weight}}
  --num_of_multi_task_solution_wise_and_stepwise_both_train_epochs ${{inputs.num_of_multi_task_solution_wise_and_stepwise_both_train_epochs}}
  --num_of_solution_wise_only_train_epochs ${{inputs.num_of_solution_wise_only_train_epochs}}
